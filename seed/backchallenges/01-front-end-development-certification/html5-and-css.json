{
  "name": "HTML5 and CSS",
  "order": 2,
  "time": "5 hours",
  "helpRoom": "Help",
  "challenges": [
    {
      "id": "bd7123c8c441eddfaeb5bdef",
      "title": "Say Hello to HTML Element",
      "description": [
        "欢迎来到FreeCodeCamp的第一个编码挑战！",
        "整个课程的设计围绕两个原则：所见即所得、循序渐进。",
        "界面简洁直观，左边是课程区、中间是编辑区、右边是结果区。",
        "HTML是英文Hper Text Markup Language(超文本标记语言)的缩写。",
        "你看到<code>&#60;h1&#62;Hello&#60;/h1&#62;</code>了吗? ",
        "<code>h1</code>就是一个HTML<code>元素</code>，<code>h1</code>是<code>header1</code>的简写，意思是一级标题。",
        "大部分元素都有一个<code>开始标记</code>和一个<code>结束标记</code>。",
        "开始标记像这样：<code>&#60;h1&#62;</code>",
        "结束标记像这样：<code>&#60;/h1&#62;</code>",
        "开始标记和结束标记的唯一区别就是结束标记多了一个<code>/</code>。",
        "每个挑战都有测试，当你完成任务后可以点击<code>Run tests</code>，如果你通过测试，你将获得学习积分。",
        "如果你点击<code>Run tests</code>后没反应，说明测试没通过，用鼠标拖动课程区的滚动条到最下面，可以看到你没有通过测试的原因。",
        "为了通过这个挑战，请更改<code>h1</code>标签中的Hello为Hello World，然后点击<code>Run tests</code>。"
      ],
      "challengeSeed": [
        "<h1>Hello</h1>"
      ],
      "tests": [
        "assert.isTrue((/hello(\\s)+world/gi).test($('h1').text()), 'message: 你的 <code>h1</code> 元素应该包含这个文本 \"Hello World\".');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf0887a",
      "title": "Headline with the h2 Element",
      "description": [
        "接下来我们会设计一个类似于下图的页面：",
        "<a href=\"//i.imgur.com/jOc1JF1.png\" data-lightbox=\"img-enlarge\"><img class=\"img-responsive\" src=\"//i.imgur.com/jOc1JF1.png\" title=\"Click to enlarge\" alt=\"A screen shot of our finished Cat Photo App\"></a>",
        "标题通常是网站结构的头部分，h1是主标题(一级标题)，h2是副标题，h3、h4、h5、h6依次递减标题字体的大小。",
        "在h1主标题下面创建一个h2副标题，标题内容是：CatPhotoApp。"
      ],
      "challengeSeed": [
        "<h1>Hello World</h1>"
      ],
      "tests": [
        "assert(($(\"h2\").length > 0), 'message: 创建一个 <code>h2</code> 元素');",
        "assert(code.match(/<\\/h2>/g) && code.match(/<\\/h2>/g).length === code.match(/<h2>/g).length, 'message: 确保你的 <code>h2</code> 元素有一个结束标记');",
        "assert.isTrue((/cat(\\s)?photo(\\s)?app/gi).test($(\"h2\").text()), 'message: 你的 <code>h2</code> 元素应该包含这个文本 \"CatPhotoApp\"');",
        "assert.isTrue((/hello(\\s)+world/gi).test($(\"h1\").text()), 'message: 你的 <code>h1</code> 元素应该包含这个文本 \"Hello World\"');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08801",
      "title": "Inform with the Paragraph Element",
      "description": [
        "P是英文<code>paragraph</code>段落的缩写，经常被用在网站中来创建一个段落。",
        "在二级标题下面新增一个段落，段落内容是：<code>Hello Paragraph</code>。"
      ],
      "challengeSeed": [
        "<h1>Hello World</h1>",
        "<h2>CatPhotoApp</h2>"
      ],
      "tests": [
        "assert(($(\"p\").length > 0), 'message: 创建一个 <code>p</code> 元素.');",
        "assert.isTrue((/hello(\\s)+paragraph/gi).test($(\"p\").text()), 'message: 你的 <code>p</code> 元素应该包含这个文本 \"Hello Paragraph\"');",
        "assert(code.match(/<\\/p>/g) && code.match(/<\\/p>/g).length === code.match(/<p/g).length, 'message: 确保你的 <code>p</code> element 有结束标记');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08802",
      "title": "Uncomment HTML",
      "description": [
        "注释有两个功能：",
        "1、想让某一段代码不起作用，但你又不想删除这一段代码。",
        "2、给你的代码添加一些说明，方便团队合作或日后自己查看，但又不想影响代码本身。",
        "我们先学会注释的第一个功能。",
        "删除<code>&#60;!--</code>和<code>--&#62;</code>来去掉注释。",
        "挑战：试着先把一级标题、二级标题、段落都注释掉。"
      ],
      "challengeSeed": [
        "<!--",
        "<h1>Hello World</h1>",
        "",
        "<h2>CatPhotoApp</h2>",
        "",
        "<p>Hello Paragraph</p>",
        "-->"
      ],
      "tests": [
        "assert($(\"h1\").length > 0, 'message: 通过取消注释来让页面上的 <code>h1</code> 元素是可见的.');",
        "assert($(\"h2\").length > 0, 'message: 通过取消注释来让页面上的 <code>h2</code> 元素是可见的.');",
        "assert($(\"p\").length > 0, 'message: 通过取消注释来让页面上的 <code>p</code> 元素是可见的.');",
        "assert(!/-->/gi.test(code), 'message: 确定你删除了所有的注释标记; i.e. <code>--&#62;</code>.');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08804",
      "title": "Comment out HTML",
      "description": [
        "注释的开始标记是<code>&#60;!--</code>",
        "结束标记是<code>--></code>",
        "你的任务就是把一级标题和段落都注释掉，但把二级标题留着。"
      ],
      "challengeSeed": [
        "<!--",
        "<h1>Hello World</h1>",
        "",
        "<h2>CatPhotoApp</h2>",
        "",
        "<p>Hello Paragraph</p>",
        "-->"
      ],
      "tests": [
        "assert(($(\"h1\").length === 0), 'message: 给你的<code>h1</code> 元素添加注释会导致你在网页行看不到这个元素.');",
        "assert(($(\"h2\").length > 0), 'message: 给你的 <code>h2</code> 元素删除注释可以让你在网页上看到这个元素.');",
        "assert(($(\"p\").length === 0), 'message: 注释掉你的 <code>p</code> 元素这样你在网页上就看不到这个元素.');",
        "assert(code.match(/-->/g).length > 1, 'message: 确保每一个注释都以<code>--&#62;</code>结尾.');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08833",
      "title": "Fill in the Blank with Placeholder Text",
      "description": [
        "Web开发者通常用<a href='http://www.ruanyifeng.com/blog/2009/04/lorem_ipsum.html'>lorem ipsum text</a>来做占位符，占位符就是占着位置的一些文字，没有实际意义。",
        "为什么叫<code>lorem ipsum text</code>呢?",
        "是因为<code>lorem ipsum</code>是古罗马西塞罗谚语的前两个单词。",
        "从公元16世纪开始<code>lorem ipsum text</code>就被当做占位符了，这种传统延续到了互联网时代。",
        "于此同时，孙悟空也在五指山下压了500年，然后就进化成程序猿了，是不是很巧合，哈哈。",
        "因为我们要创建CatPhotoApp，所以让我们使用被称作<code>kitty ipsum text</code>的东东来填充页面内容。",
        "把<code>p</code>元素中的文本替换为这段kitty ipsum text的前几个单词：<code>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</code>"
      ],
      "challengeSeed": [
        "<h1>Hello World</h1>",
        "",
        "<h2>CatPhotoApp1</h2>",
        "",
        "<p>Hello Paragraph</p>"
      ],
      "tests": [
        "assert.isTrue((/Kitty(\\s)+ipsum/gi).test($(\"p\").text()), 'message: 你的<code>p</code>元素应该包含指定的<code>kitty ipsum text</code>的前几个单词。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fed1348bd9aedf08833",
      "title": "Delete HTML Elements",
      "description": [
        "手机的屏幕空间是有限的。",
        "让我们删除不必要的元素，以便能开始创建我们的CatPhotoApp。",
        "删除你的<code>h1</code>元素以简化视图。"
      ],
      "challengeSeed": [
        "<h1>Hello World</h1>",
        "",
        "<h2>CatPhotoApp</h2>",
        "",
        "<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "tests": [
        "assert(($(\"h1\").length == 0), 'message: 删除你的<code>h1</code>元素。');",
        "assert(($(\"h2\").length > 0), 'message: 在页面上保留你的<code>h2</code>元素。');",
        "assert(($(\"p\").length > 0), 'message: 在页面上保留你的<code>p</code>元素。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08803",
      "title": "Change the Color of Text",
      "description": [
        "现在让我们来改变某些文本的颜色。",
        "我们可以通过修改<code>h2</code>元素的<code>style</code>(样式)来达到目的。",
        "样式的属性有很多，其中color用来指定颜色。",
        "以下是如何将你的<code>h2</code>元素的文本颜色设置为蓝色的方法：",
        "<code>&#60;h2 style=\"color: blue\"&#62;CatPhotoApp&#60;/h2&#62;</code>",
        "修改你的<code>h2</code>元素的style，让文本的颜色变为红色。"
      ],
      "challengeSeed": [
        "<h2>CatPhotoApp</h2>",
        "",
        "<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "tests": [
        "assert($(\"h2\").css(\"color\") === \"rgb(255, 0, 0)\", 'message: 你的<code>h2</code>元素应该是红色的。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08805",
      "title": "Use CSS Selectors to Style Elements",
      "description": [
        "<code>style</code>样式的属性多达几百个，但常用的也就几十个。",
        "当你键入<code>&#60;h2 style=\"color: red\"&#62;CatPhotoApp&#60;/h2&#62;</code>，你就给<code>h2</code>元素<code>添加了inline style(内联样式)</code>。",
        "内联样式是为元素添加样式的一种途径，但是更好的途径是使用层叠样式表<code>CSS</code>（Cascading Style Sheets）。",
        "在代码的最顶端，创建一个如下的<code>style</code>元素：",
        "<blockquote>&#60;style&#62;<br>&#60;/style&#62;</blockquote>",
        "在这个style元素内, 你可以为所有的<code>h2</code>元素创建一个<code>CSS选择器</code>。比如，如果你想要将所有的<code>h2</code>元素设置为红色, 你的样式元素应该看起来这样：",
        "<blockquote>&#60;style&#62;<br>&nbsp;&nbsp;h2 {color: red;}<br>&#60;/style&#62;</blockquote>",
        "特别需要注意的是，必须将每一个元素的样式放在左花括号（<code>{</code>）和右花括号（<code>}</code>）之间，并且还需要确保你的元素的样式在style的开始和结束标记之间。最后需要注意的一点是，一定要在每一个元素样式的结尾加上分号。",
        "删除你的<code>h2</code>元素的样式属性，然后创建一个CSS <code>style</code>元素。添加必要的CSS，使所有<code>h2</code>元素变为蓝色。"
      ],
      "challengeSeed": [
        "<h2 style=\"color: red\">CatPhotoApp</h2>",
        "",
        "<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "tests": [
        "assert(!$(\"h2\").attr(\"style\"), 'message: 从你的<code>h2</code>元素中删除样式属性。');",
        "assert($(\"style\") && $(\"style\").length > 1, 'message: 创建一个<code>style</code>元素。');",
        "assert($(\"h2\").css(\"color\") === \"rgb(0, 0, 255)\", 'message: 你的<code>h2</code>元素应该是蓝色的。');",
        "assert(code.match(/h2\\s*\\{\\s*color\\s*:.*;\\s*\\}/g), 'message: 确保你对<code>h2</code>的样式声明是正确的，并以分号和右花括号结尾。');",
        "assert(code.match(/<\\/style>/g) && code.match(/<\\/style>/g).length === (code.match(/<style((\\s)*((type|media|scoped|title|disabled)=\"[^\"]*\")?(\\s)*)*>/g) || []).length, 'message: 确保所有的<code>style</code>元素是正确的，并且包含结束标记。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aecf08806",
      "title": "Use a CSS Class to Style an Element",
      "description": [
        "class 是可以附加到 HTML 元素的可重复使用的样式。",
        "下面是一个 CSS class 声明的例子：",
        "<blockquote>&#60;style&#62;<br>&nbsp;&nbsp;.blue-text {<br>&nbsp;&nbsp;&nbsp;&nbsp;color: blue;<br>&nbsp;&nbsp;}<br>&#60;/style&#62;</blockquote>",
        "上面的语句在 <code>&#60;style&#62;</code> 标记之间创建了一个叫做 <code>blue-text</code> 的 CSS class。",
        "你可以以如下的方式将 class 应用到 HTML 元素：",
        "<code>&#60;h2 class=\"blue-text\"&#62;CatPhotoApp&#60;/h2&#62;</code>",
        "注意，在你的CSS <code>style</code>元素中，class 应该以英文的句号（.）引导，而在你的HTML元素的 class 声明中，class 不能以英文句号引导。",
        "在你的<code>style</code>元素中，修改<code>h2</code>选择器为<code>.red-text</code>，并把颜色值从<code>blue</code>修改为<code>red</code>。",
        "为你的<code>h2</code>元素设置一个值为<code>'red-text'</code>的<code>class</code>属性。"
      ],
      "challengeSeed": [
        "<style>",
        "  h2 {",
        "    color: blue;",
        "  }",
        "</style>",
        "",
        "<h2>CatPhotoApp</h2>",
        "",
        "<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "tests": [
        "assert($(\"h2\").css(\"color\") === \"rgb(255, 0, 0)\", 'message: 你的<code>h2</code>元素应该为红色。');",
        "assert($(\"h2\").hasClass(\"red-text\"), 'message: 你的<code>h2</code>元素应该包含<code>red-text</code> class。');",
        "assert(code.match(/\\.red-text\\s*\\{\\s*color\\s*:\\s*red;\\s*\\}/g), 'message: 你的样式表应该声明一个<code>red-text</code> class，并设置其color为red。');",
        "assert($(\"h2\").attr(\"style\") === undefined, 'message: 不要在你的<code>h2</code>元素中使用形如<code>style=\"color&#58; red\"</code>的内联（inline）样式声明。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aefe08806",
      "title": "Style Multiple Elements with a CSS Class",
      "description": [
        "记住，你可以在 HTML 元素的开始标记中通过使用<code>class=\"your-class-here\"</code>将 class 附加到相关元素中。",
        "记住，CSS class 选择器要求以英文句号引导，如下：",
        "<blockquote>.blue-text {<br>&nbsp;&nbsp;color: blue;<br>}</blockquote>",
        "但是，同样需要记住的是 class 声明不使用英文句号引导，如下：",
        "<code>&#60;h2 class=\"blue-text\"&#62;CatPhotoApp&#60;/h2&#62;</code>",
        "将<code>red-text</code> class 应用到<code>h2</code>和<code>p</code>元素中。"
      ],
      "challengeSeed": [
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "tests": [
        "assert($(\"h2\").css(\"color\") === \"rgb(255, 0, 0)\", 'message: 你的<code>h2</code>元素应该为红色。');",
        "assert($(\"h2\").hasClass(\"red-text\"), 'message: 你的<code>h2</code>元素应该包含<code>red-text</code> class。');",
        "assert($(\"p\").css(\"color\") === \"rgb(255, 0, 0)\", 'message: 你的<code>p</code>元素应该为红色。');",
        "assert($(\"p\").hasClass(\"red-text\"), 'message: 你的<code>p</code>元素应该包含<code>red-text</code> class。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08806",
      "title": "Change the Font Size of an Element",
      "description": [
        "字号是由CSS属性<code>font-size</code>来控制的, 如下：",
        "<blockquote>h1 {<br>&nbsp;&nbsp;font-size: 30px;<br>}</blockquote>",
        "用如下的kitty ipsum文本来创建第二个<code>p</code>元素：<code>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</code>",
        "在包含<code>red-text</code> class 的同一个<code>&#60;style&#62;</code>标记中，为<code>p</code>元素创建一个条目并设置其<code>font-size</code>为16像素（<code>16px</code>）。",
        "<strong>注意</strong><br>因为浏览器实现上的不同，你可能需要将页面缩放调整为100%以通过本挑战的测试。",
        "同时，将不要为新的<code>p</code>元素添加 class 属性。"
      ],
      "challengeSeed": [
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>"
      ],
      "tests": [
        "assert($(\"p\").length > 1, 'message: 你需要2个带有Kitty Ipsum文本的<code>p</code>元素。');",
        "assert(code.match(/<\\/p>/g) && code.match(/<\\/p>/g).length === code.match(/<p/g).length, 'message: 确保你的每一个<code>p</code>元素都包含结束标记。');",
        "assert.isTrue((/Purr\\s+jump\\s+eat/gi).test($(\"p\").text()), 'message: 你的<code>p</code>元素应该包含另外提供的<code>kitty ipsum文本</code>的前几个单词。');",
        "assert($(\"p:not([class])\").length === 1, 'message: 不要为第二个<code>p</code>元素添加 class 属性，也不要将其从第一个中删除。');",
        "assert(parseInt($(\"p:not([class])\").css(\"font-size\"), 10) > 15, 'message: 将包含<code>p</code>标记的元素的<code>font-size</code>设置为<code>16px</code>。浏览器和文本缩放应该设置为100%。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aede08807",
      "title": "Set the Font Family of an Element",
      "description": [
        "你可以用<code>font-family</code>属性来设置元素的字体。",
        "例如，如果你想把你的<code>h2</code>元素的字体设置为<code>Sans-serif</code>，你可以使用下面的CSS：",
        "<blockquote>h2 {<br>&nbsp;&nbsp;font-family: Sans-serif;<br>}</blockquote>",
        "让你所有的<code>p</code>元素都使用<code>Monospace</code>字体。"
      ],
      "challengeSeed": [
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert($(\"p\").not(\".red-text\").css(\"font-family\").match(/monospace/i), 'message: 你的<code>p</code>元素应该使用字体<code>Monospace</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08807",
      "title": "Import a Google Font",
      "description": [
        "现在，让我们来导入并应用谷歌字体（注意，因为谷歌在中国被屏蔽，所以你需要跳过本轮挑战；如果你已翻墙或肉身已在墙外，那么请继续）。",
        "首先，你需要<code>调用</code>谷歌以获取<code>Lobster</code>字体并将其载入你的HTML。",
        "复制下面的代码片断并将其粘贴到你的代码编辑器的顶部：",
        "<code>&#60;link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\"&#62;</code>",
        "现在你可以将<code>Lobster</code>作为 font-family 的值应用到你的<code>h2</code>元素上了。",
        "为你的<code>h2</code>元素应用<code>font-family</code>，值为<code>Lobster</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert(new RegExp(\"googleapis\", \"gi\").test(code), 'message: 导入<code>Lobster</code>字体。');",
        "assert($(\"h2\").css(\"font-family\").match(/lobster/i), 'message: 你的<code>h2</code>元素应该使用字体<code>Lobster</code>。');",
        "assert($(\"p\").css(\"font-family\").match(/monospace/i), 'message: 你的<code>p</code>元素应该继续使用字体<code>Monospace</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08808",
      "title": "Specify How Fonts Should Degrade",
      "description": [
        "有几种默认的字体是所有浏览器都可用的，包括<code>Monospace</code>、<code>Serif</code>和<code>Sans-Serif</code>。",
        "当某种字体不可用时，你可以告诉浏览器“降级”到另一种字体。",
        "例如，如果你想对某元素应用<code>Helvetica</code>字体，但你同时想在<code>Helvetica</code>不可用时降级使用<code>Sans-Serif</code>字体，你可以使用如下CSS样式：",
        "<blockquote>p {<br>&nbsp;&nbsp;font-family: Helvetica, Sans-Serif;<br>}</blockquote>",
        "现在注释掉你对谷歌字体的引用，以使<code>Lobster</code>字体不可用。注意它是如何降级到<code>Monospace</code>字体的。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert($(\"h2\").css(\"font-family\").match(/^\"?lobster/i), 'message: 你的h2元素应该使用<code>Lobster</code>字体。');",
        "assert($(\"h2\").css(\"font-family\").match(/lobster.*,.*monospace/i), 'message: 当<code>Lobster</code>字体不可用时你的h2元素应该降级到<code>Monospace</code>字体。');",
        "assert(new RegExp(\"<!--\", \"gi\").test(code), 'message: 通过把<code>&#60!--</code>放在前面以把对谷歌<code>Lobster</code>字体的引用注释掉。');",
        "assert(new RegExp(\"-->\", \"gi\").test(code), 'message: 别忘了通过添加<code>--&#62;</code>来结束你的注释。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08812",
      "title": "Add Images to your Website",
      "description": [
        "你可以通过使用<code>img</code>元素来为你的网站添加图片，并且使用<code>src</code>属性指向一个特定图片的URL。",
        "举例如下：",
        "<code>&#60img src=\"https://www.your-image-source.com/your-image.jpg\"&#62</code>",
        "注意，在大多数情况下，<code>img</code>元素是自关闭的。",
        "用以下图片来测试：",
        "<code>https://bit.ly/fcc-relaxing-cat</code>"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert($(\"img\").length > 0, 'message: 你的页面应该包含一个图片元素。');",
        "assert(new RegExp(\"\\/\\/bit.ly\\/fcc-relaxing-cat\", \"gi\").test($(\"img\").attr(\"src\")), 'message: 你的图片应该包含一个指向猫咪图片的<code>src</code>属性。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9acdf08812",
      "title": "Size your Images",
      "description": [
        "CSS包含一个控制元素宽度的<code>width</code>属性。像控制字体一样，我们使用<code>px</code>（像素）来指定图片的宽度。",
        "例如，如果我们想要创建一个名为<code>larger-image</code>的CSS class，把HTML元素的宽度设定为500像，我们使用：",
        "<blockquote>&#60;style&#62;<br>&nbsp;&nbsp;.larger-image {<br>&nbsp;&nbsp;&nbsp;&nbsp;width: 500px;<br>&nbsp;&nbsp;}<br>&#60;/style&#62;</blockquote>",
        "创建一个名为<code>larger-image</code>的 class，然后用它来改变图片尺寸，使图片仅有100像素宽。",
        "<strong>注意</strong><br>由于浏览器实现上的差异，要通过本轮挑战的测验，你可能需要将浏览器的缩放比例设置为100%。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<img src=\"https://bit.ly/fcc-relaxing-cat\">",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert($(\"img\").hasClass(\"smaller-image\"), 'message: 你的<code>img</code>元素应该包含<code>smaller-image</code> class。');",
        "assert($(\"img\").width() === 100, 'message: 你的图片应该为100像素宽，浏览器缩放比例应该为100%。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9bedf08813",
      "title": "Add Borders Around your Elements",
      "description": [
        "CSS 边框的属性有style(样式)、color(颜色)、width(宽度)、height(高度)等。",
        "举个例子，如果我们想要让一个HTML元素的边框颜色为红色、边框宽度为5像素(pixel)，我们可以用下面这个class来定义:",
        "<blockquote>&#60;style&#62;<br>&nbsp;&nbsp;.thin-red-border {<br>&nbsp;&nbsp;&nbsp;&nbsp;border-color: red;<br>&nbsp;&nbsp;&nbsp;&nbsp;border-width: 5px;<br>&nbsp;&nbsp;&nbsp;&nbsp;border-style: solid;<br>&nbsp;&nbsp;}<br>&#60;/style&#62;</blockquote>",
        "创建一个叫thick-green-border的class，让它的边框宽度为10像素、边框样式为solid(固体)、边框颜色为绿色(green)，然后把这个class应用到你的猫咪照片上。",
        "记住：你可以应用多个class到一个元素，只需要在多个class之间用空格分开即可。举个例子：",
        "<code>&lt;img class=\"class1 class2\"&gt;</code>"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<img class=\"smaller-image\" src=\"https://bit.ly/fcc-relaxing-cat\">",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert($(\"img\").hasClass(\"smaller-image\"), 'message: 你的 <code>img</code> 元素应该有 class <code>smaller-image</code>.');",
        "assert($(\"img\").hasClass(\"thick-green-border\"), 'message: 你的 <code>img</code> 元素应该有 class <code>thick-green-border</code>.');",
        "assert($(\"img\").hasClass(\"thick-green-border\") && parseInt($(\"img\").css(\"border-top-width\"), 10) >= 8 && parseInt($(\"img\").css(\"border-top-width\"), 10) <= 12, 'message: 指定图片的边框宽度为 <code>10px</code>.');",
        "assert($(\"img\").css(\"border-right-style\") === \"solid\", 'message: 指定图标的边框样式为 <code>solid</code>.');",
        "assert($(\"img\").css(\"border-left-color\") === \"rgb(0, 128, 0)\", 'message: 这个围绕着 <code>img</code> 元素的边框颜色应该是绿色.');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08814",
      "title": "Add Rounded Corners with a Border Radius",
      "description": [
        "你的猫咪图片的边框现在是尖尖的，不够可爱，我们可以通过CSS的一个叫border-radius(边框半径)的属性来让它的边框变成圆的。",
        "你可以用像素来指定border-raidus的属性值，现在让你的猫咪图片的边框半径为10px吧。",
        "注意：这个小节允许多种解决方案。你可以添加border-radius到<code>.thick-green-border</code> class 也可以添加到<code>.smaller-image</code> class."
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">我家的猫咪</h2>",
        "",
        "<img class=\"smaller-image thick-green-border\" src=\"https://bit.ly/fcc-relaxing-cat\">",
        "",
        "<p class=\"red-text\">我家两岁的小公猫哈哈是个收藏家，臭鱼烂虾，鸡头猪手，无所不爱。清晨我还在睡梦中，突然觉得胸口一沉，恍惚中意识到哈哈又跑到我身上来撒娇，心里不由得滚起温暖的热流，拉过哈哈一把从头摸过背，小家伙顺势想往被子里钻，我一边拒绝着一边往上拉被子，突然脚下一凉，烂泥一样挂在我的大脚趾上的是一块垃圾箱里的鱼头！我顿时睡意全无，换床单洗被罩，天光放亮才勉强收拾妥当。害得我带着熊猫眼跑去上班，一天都没有好心情。实在搞不懂它为什么爱把垃圾叼上床，是故意恶作剧？还是我给的猫粮不够吃？</p>",
        "<p class=\"red-text\">有时候猫会把主人当成自己的孩子(听起来有点令人窝心)，这种行为是在给家里带来猎物。它把自己看成是家里的顶梁柱，有责任给不争气的主人找来食物——猫咪通过长时间对你的观察，沉痛地发现你不会打猎。经常出门的猫咪会把它逮到的老鼠、小鸟带回家里，不出门的就经常翻翻垃圾箱找点东西给你。这个时候，主人可不要责骂它，不然它会认为你对它带回来的食物不满意，下次去找更了不起的东西带回来，放在房间里最显眼的地方。但如果你看见它往家里运输死老鼠，最好也别谢它，别让它觉得你对这种猎物很满意，下次照单带回来。最好的办法是心里感念着猫咪所为你做的，并默默地收拾好一切。</p>"
      ],
      "tests": [
        "assert($(\"img\").hasClass(\"thick-green-border\"), 'message: 你的图片元素应该有 class \"thick-green-border\".');",
        "assert(parseInt($(\"img\").css(\"border-top-left-radius\")) > 8, 'message: 你的图片的边框半径应该为 <code>10px</code>');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08815",
      "title": "Make Circular Images with a Border Radius",
      "description": [
        "除了像素，你还可以使用百分比来指定一个<code>border-radius</code>。",
        "给你的猫咪图片一个<code>50%</code>的<code>border-radius</code>。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 10px;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<img class=\"smaller-image thick-green-border\" src=\"https://bit.ly/fcc-relaxing-cat\">",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert(parseInt($(\"img\").css(\"border-top-left-radius\")) > 48, 'message: 你的图片的边框半径应该是<code>50&#37;</code>，这样它就可以形成一个圆形边框。');",
        "assert(code.match(/50%/g), 'message: 确定你使用的是百分比而不是像素值。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08816",
      "title": "Link to External Pages with Anchor Elements",
      "description": [
        "<code>a</code>元素, 也叫<code>anchor（锚）</code>元素，被用来链接到当前页面的外部内容。",
        "下面是一张<code>a</code>元素的图示。在此，<code>a</code>元素被用在了一个段落元素的中间，这意味着链接会出现在句子的中间。",
        "<a href=\"//i.imgur.com/hviuZwe.png\" data-lightbox=\"img-enlarge\"><img class=\"img-responsive\" title=\"Click to enlarge\" alt=\"a diagram of how anchor tags are composed with the same text as on the following line\" src=\"//i.imgur.com/hviuZwe.png\"></a>",
        "Here's an example:",
        "<code>&#60;p&#62;Here's a &#60;a href=\"http://freecodecamp.com\"&#62; link to Free Code Camp&#60;/a&#62; for you to follow.&#60;/p&#62;</code>",
        "创建一个链接到<code>http://freecatphotoapp.com</code>的<code>a</code>元素，并且用\"cat photos\"作为其<code>anchor text（锚文本）</code>。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<img class=\"smaller-image thick-green-border\" src=\"https://bit.ly/fcc-relaxing-cat\">",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert((/cat photos/gi).test($(\"a\").text()), 'message: 你的<code>a</code>元素应该使用\"cat photos\"作为其<code>anchor text（锚文本）</code>。');",
        "assert(/http:\\/\\/freecatphotoapp\\.com/gi.test($(\"a\").attr(\"href\")), 'message: 你需要有一个链接到<code>http&#58;//freecatphotoapp.com</code>的<code>a</code>元素。');",
        "assert(code.match(/<\\/a>/g) && code.match(/<\\/a>/g).length === code.match(/<a/g).length, 'message: 确保你的<code>a</code>元素有一个结束标记。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aede08817",
      "title": "Nest an Anchor Element within a Paragraph",
      "description": [
        "作为参考，再次看一看<code>a</code>元素的图示：",
        "<a href=\"//i.imgur.com/hviuZwe.png\" data-lightbox=\"img-enlarge\"><img class=\"img-responsive\" title=\"Click to enlarge\" alt=\"a diagram of how anchor tags are composed with the same text as on the following line\" src=\"//i.imgur.com/hviuZwe.png\"></a>",
        "例如：",
        "<code>&#60;p&#62;Here's a &#60;a href=\"https://freecodecamp.com\"&#62; link to Free Code Camp&#60;/a&#62; for you to follow.&#60;/p&#62;</code>",
        "<code>Nesting（嵌套）</code>就是把一个元素放在另一个元素里面。",
        "现在，把你已有的<code>a</code>元素嵌套进一个新的<code>p</code>元素（紧邻已有的<code>h2</code>元素之后），使包围的段落为\"View more cat photos\"，但是其中仅\"cat photos\"是一个链接，其余的文本是普通文本。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<a href=\"http://www.freecatphotoapp.com\">cat photos</a>",
        "",
        "<img class=\"smaller-image thick-green-border\" src=\"https://bit.ly/fcc-relaxing-cat\">",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert($(\"a[href=\\\"http://www.freecatphotoapp.com\\\"]\").length > 0, 'message: 你需要有一个链接到\"http://www.freecatphotoapp.com\"的<code>a</code>元素。');",
        "assert($(\"a\").text().match(/cat\\sphotos/gi), 'message: 你的<code>a</code>元素的锚文本应该为\"cat photos\"。');",
        "assert($(\"p\") && $(\"p\").length > 2, 'message: 创建一个新的包围你的<code>a</code>元素的<code>p</code>元素。');",
        "assert($(\"a[href=\\\"http://www.freecatphotoapp.com\\\"]\").parent().is(\"p\"), 'message: 你的<code>a</code>元素应该嵌套在你新的<code>p</code>元素中。');",
        "assert($(\"a[href=\\\"http://www.freecatphotoapp.com\\\"]\").parent().text().match(/^\\s*View\\smore\\s/gi), 'message: 你的<code>p</code>元素应该包含文本\"View more \"（后面有一个空格）。');",
        "assert(!$(\"a\").text().match(/View\\smore/gi), 'message: 你的<code>a</code>元素<em>不</em>应该包含文本\"View more\"。');",
        "assert(code.match(/<\\/p>/g) && code.match(/<p/g) && code.match(/<\\/p>/g).length === code.match(/<p/g).length, 'message: 确保你的每一个<code>p</code>元素都有一个结束标记。');",
        "assert(code.match(/<\\/a>/g) && code.match(/<a/g) && code.match(/<\\/a>/g).length === code.match(/<a/g).length, 'message: 确保你的每一个<code>a</code>元素都有一个结束标记。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08817",
      "title": "Make Dead Links using the Hash Symbol",
      "description": [
        "有时你想为你的网站添加一个<code>a</code>元素，但此时你还不知道要将它们链接到哪儿，此时可以使用死链接。",
        "当想要使用我们后面要学到的<code>jQuery</code>改变一个链接的行为时，使用死链接也是非常方便的。",
        "把你的<code>a</code>元素的<code>href</code>属性的值替换为一个<code>#</code>，或称hash（哈希）符，将其变为一个死链接。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"http://www.freecatphotoapp.com\">cat photos</a>.</p>",
        "",
        "<img class=\"smaller-image thick-green-border\" src=\"https://bit.ly/fcc-relaxing-cat\">",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert($(\"a\").attr(\"href\") === \"#\", 'message: 通过把<code>href</code>属性设置为\"#\"，你的<code>a</code>元素应该是一个死链接。 ');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08820",
      "title": "Turn an Image into a Link",
      "description": [
        "你可以通过把某元素嵌套进<code>a</code>元素使其变成一个链接。",
        "把你的图片嵌套进<code>a</code>元素。举例如下：",
        "<code>&#60;a href=\"#\"&#62;&#60;img src=\"https://bit.ly/fcc-running-cats\"&#62;&#60;/a&#62;</code>",
        "记得将<code>#</code>作为<code>a</code>元素的<code>href</code>属性，使其变为一个死链接。",
        "一旦完成，把你的光标悬停在你的图片上。你的光标此时应该由普通光标指针变成链接点击指针。图片现在是一个链接了。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<img class=\"smaller-image thick-green-border\" src=\"https://bit.ly/fcc-relaxing-cat\">",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert($(\"a\").children(\"img.smaller-image\").length > 0, 'message: 把现有的<code>img</code>元素嵌套进一个<code>a</code>元素。');",
        "assert(new RegExp(\"#\").test($(\"a\").children(\"img\").parent().attr(\"href\")), 'message: 你的<code>a</code>元素应该是一个<code>href</code>属性设置为<code>#</code>的死链接。');",
        "assert(code.match(/<\\/a>/g) && code.match(/<a/g) && code.match(/<\\/a>/g).length === code.match(/<a/g).length, 'message: 确保你的每一个<code>a</code>元素都有结束标记。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08818",
      "title": "Add Alt Text to an Image for Accessibility",
      "description": [
        "<code>alt</code>属性，也被称为<code>alt text</code>, 是当浏览器无法调入图片时显示的文本。<code>alt</code>属性对于盲人或视觉损伤的用户理解一幅图片中所描绘的内容也非常重要，搜索引擎也会搜索<code>alt</code>属性。",
        "简而言之，每一张图片都应该有一个<code>alt</code>属性！",
        "你可以像下面例子中一样为img元素添加一个<code>alt</code>属性：",
        "<code>&#60img src=\"www.your-image-source.com/your-image.jpg\" alt=\"your alt text\"&#62</code>",
        "为你的猫咪图片添加一个<code>alt</code>属性，内容为<code>A cute orange cat lying on its back</code>。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert($(\"img\").filter(function(){ return /cat/gi.test(this.alt) }).length > 0, 'message: 你的图片元素应该有一个设置为<code>A cute orange cat lying on its back</code>的<code>alt</code>属性。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08827",
      "title": "Create a Bulleted Unordered List",
      "description": [
        "HTML有一个特殊元素，用于创建<code>unordered lists（无序列表）</code>, 或带项目符号的列表。",
        "无序列表以<code>&#60;ul&#62;</code>元素开始，并包含一个或多个<code>&#60;li&#62;</code>元素。",
        "例如：",
        "<blockquote>&#60;ul&#62;<br>&nbsp;&nbsp;&#60;li&#62;milk&#60;/li&#62;<br>&nbsp;&nbsp;&#60;li&#62;cheese&#60;/li&#62;<br>&#60;/ul&#62;</blockquote>",
        "将会创建一个带项目符号的\"milk\"和\"cheese\"列表。",
        "删除最后两<code>p</code>元素，然后在页面底部创建一个有关猫咪喜欢的三件事情的无序列表。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p class=\"red-text\">Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>",
        "<p class=\"red-text\">Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>"
      ],
      "tests": [
        "assert($(\"ul\").length > 0, 'message: 创建一个<code>ul</code>元素。');",
        "assert($(\"ul li\").length > 2, 'message: 你应该在你的<code>ul</code>元素中添加三条<code>li</code>元素。');",
        "assert(code.match(/<\\/ul>/gi) && code.match(/<ul/gi) && code.match(/<\\/ul>/gi).length === code.match(/<ul/gi).length, 'message: 确保你的<code>ul</code>元素有结束标记。');",
        "assert(code.match(/<\\/li>/gi) && code.match(/<li[\\s>]/gi) && code.match(/<\\/li>/gi).length === code.match(/<li[\\s>]/gi).length, 'message: 确保你的<code>li</code>元素有结束标记。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08828",
      "title": "Create an Ordered List",
      "description": [
        "HTML有一个特殊元素，用于创建<code>ordered lists（有序列表）</code>, 或数字编号列表。",
        "有序列表以<code>&#60;ol&#62;</code>元素开始，并包含一个或多个<code>&#60;li&#62;</code>元素。",
        "例如：",
        "<blockquote>&#60;ol&#62;<br>&nbsp;&nbsp;&#60;li&#62;Garfield&#60;/li&#62;<br>&nbsp;&nbsp;&#60;li&#62;Sylvester&#60;/li&#62;<br>&#60;/ol&#62;</blockquote>",
        "将创建一个包含\"Garfield\"和\"Sylvester\"的数字编号列表。",
        "创建一个有关猫咪最痛恨的三件事情的有序列表。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>"
      ],
      "tests": [
        "assert.equal($(\"ol\").prev().text(), 'Top 3 things cats hate:', 'message: 你应该有一个关于\"Top 3 things cats hate（猫咪最痛恨的三件事情）\"的有序列表。');",
        "assert.equal($(\"ul\").prev().text(), \"Things cats love:\", 'message: 你应该有一个关于\"Things Cats Love（猫咪最喜欢的三件事情）\"的无序列表。');",
        "assert.equal($(\"ul li\").length, 3, 'message: 在你的<code>ul</code>元素中应该包含三条<code>li</code>元素。');",
        "assert.equal($(\"ol li\").length, 3, 'message: 在你的<code>ol</code>元素中应该包含三条<code>li</code>元素。');",
        "assert(code.match(/<\\/ul>/g) && code.match(/<\\/ul>/g).length === code.match(/<ul>/g).length, 'message: 确保你的<code>ul</code>元素有一个结束标记。');",
        "assert(code.match(/<\\/ol>/g) && code.match(/<\\/ol>/g).length === code.match(/<ol>/g).length, 'message: 确保你的<code>ol</code>元素有一个结束标记。');",
        "assert(code.match(/<\\/li>/g) && code.match(/<li>/g) && code.match(/<\\/li>/g).length === code.match(/<li>/g).length, 'message: 确保你的<code>li</code>元素有一个结束标记。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08829",
      "title": "Create a Text Field",
      "description": [
        "现在让我们来创建一个web form（web表单）。",
        "Text inputs（文本输入框）是从你的用户获取输入的一条方便途径。",
        "你可以用如下方法创建：",
        "<code>&#60;input type=\"text\"&#62;</code>",
        "注意，<code>input</code>元素是自关闭的。",
        "在你的列表下创建一个type（类型）为<code>text</code>的<code>input</code>元素。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>"
      ],
      "tests": [
        "assert($(\"input[type=text]\").length > 0, 'message: 你的应用应该有一个type（类型）为<code>text</code>的<code>input</code>元素。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08830",
      "title": "Add Placeholder Text to a Text Field",
      "description": [
        "占位文本（placeholder text）是在你的用户输入任何东西之前出现在你的文本<code>input（输入）</code>框中的文本。",
        "你可以以如下方式创建占位文本：",
        "<code>&#60;input type=\"text\" placeholder=\"this is placeholder text\"&#62;</code>",
        "把你的文本<code>input（输入）</code>框的<code>placeholder</code>的值设置为\"cat photo URL\"。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<input type=\"text\">"
      ],
      "tests": [
        "assert($(\"input[placeholder]\").length > 0, 'message: 添加一个具有<code>placeholder</code>属性的文本<code>input</code>元素。');",
        "assert($(\"input\") && $(\"input\").attr(\"placeholder\") && $(\"input\").attr(\"placeholder\").match(/cat\\s+photo\\s+URL/gi), 'message: 把你的placeholder属性的值设置为\"cat photo URL\"。');",
        "assert($(\"input[type=text]\").length > 0 && code.match(/<input.*(text|URL)\\s*[\"\\']\\s*\\/?>/gi), 'message: 完成后的<code>input</code>元素应该具有合法的语法。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aede08830",
      "title": "Create a Form Element",
      "description": [
        "你可以仅使用纯HTML来构建实际提交数据到服务器的web表单（form），通过给你的<code>form</code>元素添加一个动作来达到此目的。",
        "例如：",
        "<code>&#60;form action=\"/url-where-you-want-to-submit-form-data\"&#62;&#60;/form&#62;</code>",
        "把你的文本框嵌套进一个<code>form</code>元素，并为此表单元素添加<code>action=\"/submit-cat-photo\"</code>属性。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<input type=\"text\" placeholder=\"cat photo URL\">"
      ],
      "tests": [
        "assert($(\"form\") && $(\"form\").children(\"input\") && $(\"form\").children(\"input\").length > 0, 'message: 把你的文本输入元素嵌套进一个<code>form</code>元素。');",
        "assert($(\"form\").attr(\"action\") === \"/submit-cat-photo\", 'message: 确保你的<code>form</code>有一个设置为<code>/submit-cat-photo</code>的<code>action</code>属性。');",
        "assert(code.match(/<\\/form>/g) && code.match(/<form/g) && code.match(/<\\/form>/g).length === code.match(/<form/g).length, 'message: 确保你的<code>form</code>元素有一个结束标记。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedd08830",
      "title": "Add a Submit Button to a Form",
      "description": [
        "让我们来为你的form添加一个<code>submit（提交）</code>按钮，点击这个按钮，数据将会从你的form发送到你通过<code>action</code>属性指定的URL上。",
        "下面是submit按钮的例子：",
        "<code>&#60;button type=\"submit\"&#62;this button submits the form&#60;/button&#62;</code>",
        "为你的<code>form</code>元素添加一个type为<code>submit</code>的submit按钮，用\"Submit\"作按钮文本。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<form action=\"/submit-cat-photo\">",
        "  <input type=\"text\" placeholder=\"cat photo URL\">",
        "</form>"
      ],
      "tests": [
        "assert($(\"form\").children(\"button\").length > 0, 'message: 你的form内部应该有一个button。');",
        "assert($(\"button\").attr(\"type\") === \"submit\", 'message: 你的submit button应该有一个<code>type</code>属性，其值设置为<code>submit</code>。');",
        "assert($(\"button\").text().match(/^\\s*submit\\s*$/gi), 'message: 你的submit button的按钮文本仅应该为\"Submit\"。');",
        "assert(code.match(/<\\/button>/g) && code.match(/<button/g) && code.match(/<\\/button>/g).length === code.match(/<button/g).length, 'message: 确保你的<code>button</code>元素有一个结束标记。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedc08830",
      "title": "Use HTML5 to Require a Field",
      "description": [
        "你可以使指定的表单字段成为必填项（required），这样，只有当你的用户填写了该字段后，他（她）才能够提交你的表单。",
        "例如，如果你想把一个文本输入字段设置为必填项，在你的<code>input</code>元素中加上<code>required</code>这个单词就可以了， 你可以使用：<code>&#60;input type=\"text\" required&#62;</code>",
        "把你的文本<code>input</code>改为<code>required</code>字段，这样你的用户不填写完这个字段就无法提交表单。",
        "然后，试试不填写任何文本提交表单，看看你的HTML5表单如何提示你该字段为必填项。",
        "注意：该字段在Safari浏览器中不起作用。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<form action=\"/submit-cat-photo\">",
        "  <input type=\"text\" placeholder=\"cat photo URL\">",
        "  <button type=\"submit\">Submit</button>",
        "</form>"
      ],
      "tests": [
        "assert($(\"input\").prop(\"required\"), 'message: 你的文本<code>input</code>元素应该具有<code>required</code>属性。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08834",
      "title": "Create a Set of Radio Buttons",
      "description": [
        "你可以将<code>radio buttons（单选按钮）</code>用于你想要用户只给出一个答案的问题中。",
        "单选按钮是<code>input</code>的一种。",
        "每一个单选按钮都应该嵌套在它自己的<code>label（标签）</code>元素中。",
        "所有关联的单选按钮应该使用相同的<code>name</code>属性。",
        "下面是一个单选按钮的例子：",
        "<code>&#60;label&#62;&#60;input type=\"radio\" name=\"indoor-outdoor\"&#62; Indoor&#60;/label&#62;</code>",
        "给你的表单添加一对单选按钮，其中之一应该具有<code>indoor</code>选项，另一个应该具有<code>outdoor</code>选项。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<form action=\"/submit-cat-photo\">",
        "  <input type=\"text\" placeholder=\"cat photo URL\" required>",
        "  <button type=\"submit\">Submit</button>",
        "</form>"
      ],
      "tests": [
        "assert($('input[type=\"radio\"]').length > 1, 'message: 你的页面上应该有两个单选按钮元素。');",
        "assert($('label > input[type=\"radio\"]').filter(\"[name='indoor-outdoor']\").length > 1, 'message: 设置你的单选按钮的<code>name</code>属性为<code>indoor-outdoor</code>。');",
        "assert($('label > input[type=\"radio\"]:only-child').length > 1, 'message: 你的两个单选按钮中的每一个都应该嵌套进它自己的<code>label</code>元素中。');",
        "assert((code.match(/<\\/label>/g) && code.match(/<label/g) && code.match(/<\\/label>/g).length === code.match(/<label/g).length), 'message: 确保你的每一个<code>label</code>元素都有一个结束标记。');",
        "assert($(\"label\").text().match(/indoor/gi), 'message: 应该有一个标签为<code>indoor</code>的单选按钮。');",
        "assert($(\"label\").text().match(/outdoor/gi), 'message: 应该有一个标签为<code>outdoor</code>的单选按钮。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08835",
      "title": "Create a Set of Checkboxes",
      "description": [
        "表单中一般将<code>checkboxes（复选按钮）</code> 用于可能不止一个答案的问题。",
        "复选按钮是<code>input</code>的一种。",
        "每一个复选按钮应该嵌套进它自己的<code>label</code>元素。",
        "所有关联的复选按钮输入应该具有相同的<code>name</code>属性。",
        "下面是复选按钮的例子：",
        "<code>&#60;label&#62;&#60;input type=\"checkbox\" name=\"personality\"&#62; Loving&#60;/label&#62;</code>",
        "为你的表单添加一个包含三个复选按钮的复选按钮组，每一个复选按钮都应该嵌套进它自己的<code>label</code>元素，所有三个复选按钮应该共享值为<code>personality</code>的<code>name</code>属性。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<form action=\"/submit-cat-photo\">",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\"> Indoor</label>",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\"> Outdoor</label>",
        "  <input type=\"text\" placeholder=\"cat photo URL\" required>",
        "  <button type=\"submit\">Submit</button>",
        "</form>"
      ],
      "tests": [
        "assert($('input[type=\"checkbox\"]').length > 2, 'message: 你的页面上应该有三个复选按钮元素。');",
        "assert($('label > input[type=\"checkbox\"]:only-child').length > 2, 'message: 三个复选按钮中的每一个都应该嵌套进它自己的<code>label</code>元素。');",
        "assert(code.match(/<\\/label>/g) && code.match(/<label/g) && code.match(/<\\/label>/g).length === code.match(/<label/g).length, 'message: 确保每一个<code>label</code>元素都有一个结束标记。');",
        "assert($('label > input[type=\"checkbox\"]').filter(\"[name='personality']\").length > 2, 'message: 为你的复选按钮的<code>name</code>属性设置值<code>personality</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedd08835",
      "title": "Check Radio Buttons and Checkboxes by Default",
      "description": [
        "使用<code>checked</code>属性，你可以设置复选按钮和单选按钮默认被选中。",
        "为此，只需在输入元素中添加单词\"checked\"。例如：",
        "<code>&#60;input type=\"radio\" name=\"test-name\" checked&#62;</code>",
        "将你的第一个<code>radio buttons</code>和第一个<code>checkboxes</code>都设置为默认选中。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "<form action=\"/submit-cat-photo\">",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\"> Indoor</label>",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\"> Outdoor</label>",
        "  <label><input type=\"checkbox\" name=\"personality\"> Loving</label>",
        "  <label><input type=\"checkbox\" name=\"personality\"> Lazy</label>",
        "  <label><input type=\"checkbox\" name=\"personality\"> Energetic</label>",
        "  <input type=\"text\" placeholder=\"cat photo URL\" required>",
        "  <button type=\"submit\">Submit</button>",
        "</form>"
      ],
      "tests": [
        "assert($('input[type=\"radio\"]').prop(\"checked\"), 'message: 你表单中的第一个单选按钮应该默认被选中。');",
        "assert($('input[type=\"checkbox\"]').prop(\"checked\"), 'message: 你表彰中的第一个复选按钮应该默认被选中。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aede08835",
      "title": "Nest Many Elements within a Single Div Element",
      "description": [
        "<code>div</code>元素，也被称作division（层）元素，是一个盛装其他元素的通用容器。",
        "<code>div</code>可能是所有HTML元素中最常使用的元素，在将其自身 class 声明的CSS传递给它所包裹着的所有元素时非常有用。",
        "像任何其他非自结束元素一样，你可以用<code>&#60;div&#62;</code>来标记一个<code>div</code>元素的块的开始，然后在另一行用<code>&#60;/div&#62;</code>来标记块的结束。",
        "试着在你的\"Things cats love\" <code>p</code>元素之前放置<code>div</code>的开始标记，在你的<code>ol</code>结束标记之后放置<code>div</code>的结束标记，这样你的两个列表就都嵌套在<code>div</code>中了。",
        "把\"Things cats love\"和\"Things cats hate\"两个列表都嵌套进同一个<code>div</code>元素中。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<p>Things cats love:</p>",
        "<ul>",
        "  <li>cat nip</li>",
        "  <li>laser pointers</li>",
        "  <li>lasagna</li>",
        "</ul>",
        "<p>Top 3 things cats hate:</p>",
        "<ol>",
        "  <li>flea treatment</li>",
        "  <li>thunder</li>",
        "  <li>other cats</li>",
        "</ol>",
        "",
        "<form action=\"/submit-cat-photo\">",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\" checked> Indoor</label>",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\"> Outdoor</label>",
        "  <label><input type=\"checkbox\" name=\"personality\" checked> Loving</label>",
        "  <label><input type=\"checkbox\" name=\"personality\"> Lazy</label>",
        "  <label><input type=\"checkbox\" name=\"personality\"> Energetic</label>",
        "  <input type=\"text\" placeholder=\"cat photo URL\" required>",
        "  <button type=\"submit\">Submit</button>",
        "</form>"
      ],
      "tests": [
        "assert($(\"div\").children(\"p\").length > 1, 'message: 把你的<code>p</code>元素嵌套进你的<code>div</code>元素中。');",
        "assert($(\"div\").children(\"ul\").length > 0, 'message: 把你的<code>ul</code>元素嵌套进你的<code>div</code>元素中。');",
        "assert($(\"div\").children(\"ol\").length > 0, 'message: 把你的<code>ol</code>元素嵌套进你的<code>div</code>元素中。');",
        "assert(code.match(/<\\/div>/g) && code.match(/<\\/div>/g).length === code.match(/<div>/g).length, 'message: 确保你的<code>div</code>元素有一个结束标记。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fed1348bd9aede07836",
      "title": "Give a Background Color to a Div Element",
      "description": [
        "你可以用 <code>background-color</code> 属性来设置一个元素的背景颜色。",
        "例如，如果你想把一个元素的背景颜色设置为<code>green</code>，你应该把这些加到你的 <code>style</code> 元素中：",
        "<blockquote>.green-background {<br>&nbsp;&nbsp;background-color: green;<br>}</blockquote>",
        "创建一个叫做 <code>gray-background</code> 的 class，设置其 <code>background-color</code> 为 gray，把这个 class 指定给你的 <code>div</code> 元素。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<div>",
        "  <p>Things cats love:</p>",
        "  <ul>",
        "    <li>cat nip</li>",
        "    <li>laser pointers</li>",
        "    <li>lasagna</li>",
        "  </ul>",
        "  <p>Top 3 things cats hate:</p>",
        "  <ol>",
        "    <li>flea treatment</li>",
        "    <li>thunder</li>",
        "    <li>other cats</li>",
        "  </ol>",
        "</div>",
        "",
        "<form action=\"/submit-cat-photo\">",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\" checked> Indoor</label>",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\"> Outdoor</label>",
        "  <label><input type=\"checkbox\" name=\"personality\" checked> Loving</label>",
        "  <label><input type=\"checkbox\" name=\"personality\"> Lazy</label>",
        "  <label><input type=\"checkbox\" name=\"personality\"> Energetic</label>",
        "  <input type=\"text\" placeholder=\"cat photo URL\" required>",
        "  <button type=\"submit\">Submit</button>",
        "</form>"
      ],
      "tests": [
        "assert($(\"div\").hasClass(\"gray-background\"), 'message: 把 <code>gray-background</code> class 指定给你的 <code>div</code> 元素。');",
        "assert($(\".gray-background\").css(\"background-color\") === \"rgb(128, 128, 128)\", 'message: 你的 <code>div</code> 元素应该有一个灰色（gray）的背景。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87eee1348bd9aede07836",
      "title": "Set the ID of an Element",
      "description": [
        "除了 class 之外，每一个 HTML 元素还可以拥有 <code>id</code> 属性。",
        "使用 <code>id</code> 属性有若干好处，一旦当你开始使用 jQuery 的时候你会有更深的体会。",
        "<code>id</code> 属性应该是唯一的，虽然浏览器并不强制唯一，但基于最佳实践，这一点是被广泛认可的，所以请不要给一个以上的元素设置相同的 <code>id</code> 属性。",
        "下面举例说明了如何为你的 <code>h2</code> 元素添加值为 <code>cat-photo-app</code> 的 id。",
        "<code>&#60;h2 id=\"cat-photo-app\"></code>",
        "为你的 <code>form</code> 元素添加值为 <code>cat-photo-form</code>的 id。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "  .gray-background {",
        "    background-color: gray;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<div class=\"gray-background\">",
        "  <p>Things cats love:</p>",
        "  <ul>",
        "    <li>cat nip</li>",
        "    <li>laser pointers</li>",
        "    <li>lasagna</li>",
        "  </ul>",
        "  <p>Top 3 things cats hate:</p>",
        "  <ol>",
        "    <li>flea treatment</li>",
        "    <li>thunder</li>",
        "    <li>other cats</li>",
        "  </ol>",
        "</div>",
        "",
        "<form action=\"/submit-cat-photo\">",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\" checked> Indoor</label>",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\"> Outdoor</label>",
        "  <label><input type=\"checkbox\" name=\"personality\" checked> Loving</label>",
        "  <label><input type=\"checkbox\" name=\"personality\"> Lazy</label>",
        "  <label><input type=\"checkbox\" name=\"personality\"> Energetic</label>",
        "  <input type=\"text\" placeholder=\"cat photo URL\" required>",
        "  <button type=\"submit\">Submit</button>",
        "</form>"
      ],
      "tests": [
        "assert($(\"form\").attr(\"id\") === \"cat-photo-form\", 'message: 为你的 <code>form</code> 元素添加值为 <code>cat-photo-form</code> 的 id。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87dee1348bd9aede07836",
      "title": "Use an ID Attribute to Style an Element",
      "description": [
        "关于 <code>id</code> 属性的一件非常酷的事情是，像 class 一样，你可以使用 CSS 来为其应用样式。",
        "下面是如何引用你的 <code>id</code> 属性为 <code>cat-photo-element</code> 的元素，并将它的背景色设置为绿色的例子。在你的 <code>style</code> 元素内部：",
        "<blockquote>#cat-photo-element {<br>&nbsp;&nbsp;background-color: green;<br>}</blockquote>",
        "注意，在你的 <code>style</code> 元素内部，总是需要通过在名字前加一个 <code>.</code> 来引用 class，加一个 <code>#</code> 来引用 id。",
        "试着给你的表单，它现在有一个值为 <code>cat-photo-form</code> 的 id 属性，一个绿色的背景。"
      ],
      "challengeSeed": [
        "<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">",
        "<style>",
        "  .red-text {",
        "    color: red;",
        "  }",
        "",
        "  h2 {",
        "    font-family: Lobster, Monospace;",
        "  }",
        "",
        "  p {",
        "    font-size: 16px;",
        "    font-family: Monospace;",
        "  }",
        "",
        "  .thick-green-border {",
        "    border-color: green;",
        "    border-width: 10px;",
        "    border-style: solid;",
        "    border-radius: 50%;",
        "  }",
        "",
        "  .smaller-image {",
        "    width: 100px;",
        "  }",
        "",
        "  .gray-background {",
        "    background-color: gray;",
        "  }",
        "</style>",
        "",
        "<h2 class=\"red-text\">CatPhotoApp</h2>",
        "",
        "<p>Click here for <a href=\"#\">cat photos</a>.</p>",
        "",
        "<a href=\"#\"><img class=\"smaller-image thick-green-border\" alt=\"A cute orange cat lying on its back\" src=\"https://bit.ly/fcc-relaxing-cat\"></a>",
        "",
        "<div class=\"gray-background\">",
        "  <p>Things cats love:</p>",
        "  <ul>",
        "    <li>cat nip</li>",
        "    <li>laser pointers</li>",
        "    <li>lasagna</li>",
        "  </ul>",
        "  <p>Top 3 things cats hate:</p>",
        "  <ol>",
        "    <li>flea treatment</li>",
        "    <li>thunder</li>",
        "    <li>other cats</li>",
        "  </ol>",
        "</div>",
        "",
        "<form action=\"/submit-cat-photo\" id=\"cat-photo-form\">",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\" checked> Indoor</label>",
        "  <label><input type=\"radio\" name=\"indoor-outdoor\"> Outdoor</label>",
        "  <label><input type=\"checkbox\" name=\"personality\" checked> Loving</label>",
        "  <label><input type=\"checkbox\" name=\"personality\"> Lazy</label>",
        "  <label><input type=\"checkbox\" name=\"personality\"> Energetic</label>",
        "  <input type=\"text\" placeholder=\"cat photo URL\" required>",
        "  <button type=\"submit\">Submit</button>",
        "</form>"
      ],
      "tests": [
        "assert($(\"form\").attr(\"id\") === \"cat-photo-form\", 'message: 为你的 <code>form</code> 元素添加值为 <code>cat-photo-form</code> 的 id。');",
        "assert($(\"#cat-photo-form\").css(\"background-color\") === \"rgb(0, 128, 0)\", 'message: 你的 <code>form</code> 元素的 <code>background-color</code> 应该为 green。');",
        "assert(code.match(/<form.*cat-photo-form.*>/gi) && code.match(/<form.*cat-photo-form.*>/gi).length > 0, 'message: 确保你的 <code>form</code> 元素有一个 <code>id</code> 属性。');",
        "assert(!code.match(/<form.*style.*>/gi) && !code.match(/<form.*class.*>/gi), 'message: 不要给你的 <code>form</code> 添加任何 <code>class</code> 或 <code>style</code> 属性。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad88fee1348bd9aedf08825",
      "title": "Adjusting the Padding of an Element",
      "description": [
        "现在让我们把 Cat Photo App 暂时搁置，以学习更多的 HTML 样式设置。",
        "你可能早已经注意到了这点，所有的 HTML 元素本质上是小的矩形块。",
        "有三个控制围绕 HTML 元素的空间的重要属性：<code>padding（内边距）</code>, <code>margin（外边距）</code>, and <code>border（边框）</code>.",
        "元素的 <code>padding</code> 控制元素和其 <code>border</code> 之间空间的大小。",
        "在这儿，我们可以看到绿方块和红方块被嵌套在黄方块之中，注意红方块比绿方块具有更大的 <code>padding</code>。",
        "当你加大绿方块的 <code>padding</code>, 它将加大文字  <code>padding</code> 和围绕它的 border 之间的距离。",
        "修改绿方块的 <code>padding</code> 以使它与红方块相匹配。"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding: 10px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color: red;",
        "    padding: 20px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "    padding: 10px;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "tests": [
        "assert($(\".green-box\").css(\"padding-top\") === \"20px\", 'message: 你的 <code>green-box</code> class 应该为元素设置一个 <code>20px</code> 的 <code>padding</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08822",
      "title": "Adjust the Margin of an Element",
      "description": [
        "元素的 <code>margin</code> 控制元素的 <code>border</code> 和包围元素之间空间的大小。",
        "在这儿，我们可以看到绿方块和红方块被嵌套在黄方块之中，注意红方块比绿方块具有更大的 <code>margin</code>，使得它看起来更小。",
        "当你增大绿方块的 <code>margin</code> 时，将会增加其边框和包围元素之间的距离。",
        "修改绿方块的 <code>margin</code> 以使它与红方块匹配。"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding: 10px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color: red;",
        "    padding: 20px;",
        "    margin: 20px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "    padding: 20px;",
        "    margin: 10px;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "tests": [
        "assert($(\".green-box\").css(\"margin-top\") === \"20px\", 'message: 你的 <code>green-box</code> class 应该使元素具有 <code>20px</code> 的 <code>margin</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08823",
      "title": "Add a Negative Margin to an Element",
      "description": [
        "元素的 <code>margin</code> 控制元素的 <code>border</code> 和包围元素之间空间的大小。",
        "如果你将一个元素的 <code>margin</code> 设置为负值，元素将会变大。",
        "试着像红方块那样把 <code>margin</code> 设置为负值。",
        "把绿方块的 <code>margin</code> 设置为 <code>-15px</code>，以使它将包围它的黄方块的横向宽度填满。"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding: 10px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color: red;",
        "    padding: 20px;",
        "    margin: -15px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "    padding: 20px;",
        "    margin: 20px;",
        "  }",
        "</style>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "tests": [
        "assert($(\".green-box\").css(\"margin-top\") === \"-15px\", 'message: 你的 <code>green-box</code> class 应该使元素具有 <code>-15px</code> 的 <code>margin</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08824",
      "title": "Add Different Padding to Each Side of an Element",
      "description": [
        "有时你想要自定义元素，使它的每一个边具有不同的 <code>padding</code>。",
        "CSS 允许你使用 <code>padding-top</code>、<code>padding-right</code>、<code>padding-bottom</code> 和 <code>padding-left</code> 属性来控制元素所有四个边的 <code>padding</code>。",
        "使你的绿方块的顶部和左侧具有 <code>40px</code> 的 <code>padding</code>，而底部和右侧则是 <code>20px</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding: 10px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color: red;",
        "    padding-top: 40px;",
        "    padding-right: 20px;",
        "    padding-bottom: 20px;",
        "    padding-left: 40px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "tests": [
        "assert($(\".green-box\").css(\"padding-top\") === \"40px\", 'message: 你的 <code>green-box</code> class 应该为元素的顶部设置 <code>40px</code> 的 <code>padding</code>。');",
        "assert($(\".green-box\").css(\"padding-left\") === \"40px\", 'message: 你的 <code>green-box</code> class 应该为元素的左侧设置 <code>40px</code> 的 <code>padding</code>。');",
        "assert($(\".green-box\").css(\"padding-right\") === \"20px\", 'message: 你的 <code>green-box</code> class 应该为元素的右侧设置 <code>20px</code> 的 <code>padding</code>。');",
        "assert($(\".green-box\").css(\"padding-bottom\") === \"20px\", 'message: 你的 <code>green-box</code> class 应该为元素的底部设置 <code>20px</code> 的 <code>padding</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1248bd9aedf08824",
      "title": "Add Different Margins to Each Side of an Element",
      "description": [
        "有时你想要自定义元素，使它的每一个边具有不同的 <code>margin</code>。",
        "CSS 允许你使用 <code>margin-top</code>、<code>margin-right</code>、<code>margin-bottom</code> 和 <code>margin-left</code> 属性来控制元素所有四个边的 <code>margin</code>。",
        "使你的绿方块的顶部和左侧具有 <code>40px</code> 的 <code>margin</code>，而底部和右侧则是 <code>20px</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding: 10px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color: red;",
        "    margin-top: 40px;",
        "    margin-right: 20px;",
        "    margin-bottom: 20px;",
        "    margin-left: 40px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "tests": [
        "assert($(\".green-box\").css(\"margin-top\") === \"40px\", 'message: 你的 <code>green-box</code> class 应该为元素的顶部设置 <code>40px</code> 的 <code>margin</code>。');",
        "assert($(\".green-box\").css(\"margin-left\") === \"40px\", 'message: 你的 <code>green-box</code> class 应该为元素的左侧设置 <code>40px</code> 的 <code>margin</code>。');",
        "assert($(\".green-box\").css(\"margin-right\") === \"20px\", 'message: 你的 <code>green-box</code> class 应该为元素的右侧设置 <code>20px</code> 的 <code>margin</code>。');",
        "assert($(\".green-box\").css(\"margin-bottom\") === \"20px\", 'message: 你的 <code>green-box</code> class 应该为元素的底部设置 <code>20px</code> 的 <code>margin</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08826",
      "title": "Use Clockwise Notation to Specify the Padding of an Element",
      "description": [
        "除了指定元素的 <code>padding-top</code>、<code>padding-right</code>、<code>padding-bottom</code> 和 <code>padding-left</code> 属性外，你还可以在一行中指定它们，举例如下：",
        "<code>padding: 10px 20px 10px 20px;</code>",
        "这四个值以顺时针方式排列：顶部、右侧、底部、左侧，且与分别指定每边的 padding 具有完全相同的效果。",
        "使用顺时针表示法设置 \".green-box\" class，使其顶部和左侧具有 <code>40px</code> 的 <code>padding</code>，而底部和右侧具有 <code>20px</code> 的 <code>padding</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding: 20px 40px 20px 40px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color: red;",
        "    padding: 20px 40px 20px 40px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "tests": [
        "assert($(\".green-box\").css(\"padding-top\") === \"40px\", 'message: 你的 <code>green-box</code> class 应该为元素的顶部设置 <code>40px</code> 的 <code>padding</code>。');",
        "assert($(\".green-box\").css(\"padding-right\") === \"20px\", 'message: 你的 <code>green-box</code> class 应该为元素的右侧设置 <code>20px</code> 的 <code>padding</code>。');",
        "assert($(\".green-box\").css(\"padding-bottom\") === \"20px\", 'message: 你的 <code>green-box</code> class 应该为元素的底部设置 <code>20px</code> 的 <code>padding</code>。');",
        "assert($(\".green-box\").css(\"padding-left\") === \"40px\", 'message: 你的 <code>green-box</code> class 应该为元素的左侧设置 <code>40px</code> 的 <code>padding</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9afdf08726",
      "title": "Use Clockwise Notation to Specify the Margin of an Element",
      "description": [
        "让我们再试一次，但这次是用于 <code>margin</code>。",
        "除了指定元素的 <code>margin-top</code>、<code>margin-right</code>、<code>margin-bottom</code> 和 <code>margin-left</code> 属性外，你还可以在一行中指定它们，举例如下：",
        "<code>margin: 10px 20px 10px 20px;</code>",
        "这四个值以顺时针方式排列：顶部、右侧、底部、左侧，且与分别指定每边的 margin 具有完全相同的效果。",
        "使用<code>顺时针表示法</code>设置含有 \".green-box\" class 的元素，使其顶部和左侧具有 <code>40px</code> 的 <code>margin</code>，而底部和右侧具有 <code>20px</code> 的 <code>margin</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  .injected-text {",
        "    margin-bottom: -25px;",
        "    text-align: center;",
        "  }",
        "",
        "  .box {",
        "    border-style: solid;",
        "    border-color: black;",
        "    border-width: 5px;",
        "    text-align: center;",
        "  }",
        "",
        "  .yellow-box {",
        "    background-color: yellow;",
        "    padding: 20px 40px 20px 40px;",
        "  }",
        "  ",
        "  .red-box {",
        "    background-color: red;",
        "    margin: 20px 40px 20px 40px;",
        "  }",
        "",
        "  .green-box {",
        "    background-color: green;",
        "  }",
        "</style>",
        "<h5 class=\"injected-text\">margin</h5>",
        "",
        "<div class=\"box yellow-box\">",
        "  <h5 class=\"box red-box\">padding</h5>",
        "  <h5 class=\"box green-box\">padding</h5>",
        "</div>"
      ],
      "tests": [
        "assert($(\".green-box\").css(\"margin-top\") === \"40px\", 'message: 你的 <code>green-box</code> class 应该为元素的顶部设置 <code>40px</code> 的 <code>margin</code>。');",
        "assert($(\".green-box\").css(\"margin-right\") === \"20px\", 'message: 你的 <code>green-box</code> class 应该为元素的右侧设置 <code>20px</code> 的 <code>margin</code>。');",
        "assert($(\".green-box\").css(\"margin-bottom\") === \"20px\", 'message: 你的 <code>green-box</code> class 应该为元素的底部设置 <code>20px</code> 的 <code>margin</code>。');",
        "assert($(\".green-box\").css(\"margin-left\") === \"40px\", 'message: 你的 <code>green-box</code> class 应该为元素的左侧设置 <code>40px</code> 的 <code>margin</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08736",
      "title": "Style the HTML Body Element",
      "description": [
        "现在让我们来一个全新的开始，讲一讲 CSS 继承。",
        "每一个 HTML 页面都有一个 <code>body</code> 元素。",
        "通过将其 <code>background-color</code> 设置为黑色，我们可以证明 <code>body</code> 元素的存在。",
        "我们可以通过将下面的代码添加到我们的 <code>style</code> 元素来做到这一点：",
        "<blockquote>body {<br>&nbsp;&nbsp;background-color: black;<br>}</blockquote>"
      ],
      "challengeSeed": [
        "<style>",
        "",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(0, 0, 0)\", 'message: 将你的 <code>body</code> 元素的 <code>background-color</code> 设置为 black。');",
        "assert(code.match(/<style>\\s*body\\s*\\{\\s*background.*\\s*:\\s*.*;?\\s*\\}\\s*<\\/style>/i), 'message: 确保你的 CSS 规则是正确的格式，具有开始和结束的花括号。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08746",
      "title": "Inherit Styles from the Body Element",
      "description": [
        "现在我们证明了每一个 HTML 页面都有一个 <code>body</code> 元素，并且其 <code>body</code> 元素同样能够应用样式。",
        "记住，你可以像对其他 HTML 元素一样对你的 <code>body</code> 元素应用样式，并且所有其他元素将继承你的 <code>body</code> 元素的样式。",
        "首先，创建一个文字为 <code>Hello World</code> 的 <code>h1</code> 元素。",
        "然后，让我们通过向 <code>body</code> 元素的样式声明部分添加 <code>color: green;</code> 使页面上的所有元素的颜色为 <code>green</code>。",
        "最后，通过向 <code>body</code> 元素的样式声明部分添加 <code>font-family: Monospace;</code> 将 <code>body</code> 元素的 font-family（字体）设置为 <code>Monospace</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: black;",
        "  }",
        "",
        "</style>"
      ],
      "tests": [
        "assert(($(\"h1\").length > 0), 'message: 创建一个 <code>h1</code> 元素。');",
        "assert(($(\"h1\").length > 0 && $(\"h1\").text().match(/hello world/i)), 'message: 你的 <code>h1</code> 元素的文字应该是 <code>Hello World</code>。');",
        "assert(code.match(/<\\/h1>/g) && code.match(/<h1/g) && code.match(/<\\/h1>/g).length === code.match(/<h1/g).length, 'message: 确保你的 <code>h1</code> 元素有一个结束标记。');",
        "assert(($(\"body\").css(\"color\") === \"rgb(0, 128, 0)\"), 'message: 设置 <code>body</code> 元素的 <code>color</code> 属性为 <code>green</code>。');",
        "assert(($(\"body\").css(\"font-family\").match(/Monospace/i)), 'message: 设置 <code>body</code> 元素的 <code>font-family</code> 属性为 <code>Monospace</code>。');",
        "assert(($(\"h1\").length > 0 && $(\"h1\").css(\"font-family\").match(/monospace/i)), 'message: 你的 <code>h1</code> 元素应该从 <code>body</code> 元素继承字体 <code>Monospace</code>。');",
        "assert(($(\"h1\").length > 0 && $(\"h1\").css(\"color\") === \"rgb(0, 128, 0)\"), 'message: 你的 <code>h1</code> 元素应该从 <code>body</code> 元素继承绿色。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08756",
      "title": "Prioritize One Style Over Another",
      "description": [
        "有时你的 HTML 元素会得到相互冲突的多个样式。",
        "例如，你的 <code>h1</code> 元素不能同时为绿色和粉色。",
        "让我们来看看当我们创建一个使其文字为粉色的 class 时会发生什么，然后将其应用到某元素。我们的 class 会 <code>override（覆盖）</code> <code>body</code> 元素的 <code>color: green;</code> CSS 属性吗？",
        "创建一个使元素颜色成为粉色的名为 <code>pink-text</code> 的 CSS class。",
        "设置 <code>h1</code> 元素的 class 为 <code>pink-text</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: black;",
        "    font-family: Monospace;",
        "    color: green;",
        "  }",
        "</style>",
        "<h1>Hello World!</h1>"
      ],
      "tests": [
        "assert($(\"h1\").hasClass(\"pink-text\"), 'message: 你的 <code>h1</code> 元素应该包含名为 <code>pink-text</code> 的 class。');",
        "assert(code.match(/\\.pink-text\\s*\\{\\s*color\\s*:\\s*pink\\s*;\\s*\\}/g), 'message: 你的 <code>&#60;style&#62;</code> 包含一个将 color 设置为 pink 的 <code>pink-text</code> CSS class。');",
        "assert($(\"h1\").css(\"color\") === \"rgb(255, 192, 203)\", 'message: 你的 <code>h1</code> 元素应该为粉色。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf04756",
      "title": "Override Styles in Subsequent CSS",
      "description": [
        "我们的 \"pink-text\" class 覆盖了 <code>body</code> 元素的 CSS 声明！",
        "我们刚刚证明了我们的 class 会覆盖 <code>body</code> 元素的 CSS，那么下一个合乎情理的问题就是，我们怎样才能覆盖我们的 <code>pink-text</code> class 呢？",
        "再创建一个把元素设置为蓝色的名为 <code>blue-text</code> 的 CSS class，确保它在你的 <code>pink-text</code> class 声明的下面。",
        "除了 <code>pink-text</code> class 之外，再把 <code>blue-text</code> class 应用到你的 <code>h1</code> 元素，让我们来看看谁会赢。",
        "如下例，通过用空格分隔多个 class 属性，可对 HTML 元素应用多个 class 属性：",
        "<code>class=\"class1 class2\"</code>",
        "注意：在 HTML 中这些 class 如何排序是无所谓的。",
        "然而，在 <code>&#60;style&#62;</code> 部分中 <code>class</code> 声明的顺序却非常重要，第二个声明总是比第一个具有优先权。因为 <code>.blue-text</code> 是第二个声明，它覆盖了 <code>.pink-text</code> 属性。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: black;",
        "    font-family: Monospace;",
        "    color: green;",
        "  }",
        "  .pink-text {",
        "    color: pink;",
        "  }",
        "</style>",
        "<h1 class=\"pink-text\">Hello World!</h1>"
      ],
      "tests": [
        "assert($(\"h1\").hasClass(\"pink-text\"), 'message: 你的 <code>h1</code> 元素应该包含 <code>pink-text</code> class。');",
        "assert($(\"h1\").hasClass(\"blue-text\"), 'message: 你的 <code>h1</code> 元素应该包含 <code>blue-text</code> class。');",
        "assert($(\".pink-text\").hasClass(\"blue-text\"), 'message: <code>blue-text</code> 和 <code>pink-text</code> 都应该属于同一个 <code>h1</code> 元素。');",
        "assert($(\"h1\").css(\"color\") === \"rgb(0, 0, 255)\", 'message: 你的 <code>h1</code> 元素应该是蓝色的。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd8aedf06756",
      "title": "Override Class Declarations by Styling ID Attributes",
      "description": [
        "我们刚刚证明了浏览器读取 CSS 的顺序是从上到下，这意味着，在发生冲突时，浏览器会使用最后的 CSS 声明。",
        "但是并非只有这些，还有其他覆盖 CSS 的方法。你还记得 id 属性吗？",
        "让我们来覆盖你的 <code>pink-text</code> 和 <code>blue-text</code> 两个 class，通过为 <code>h1</code> 元素添加 id 并设置 id 的样式，使你的 <code>h1</code> 元素变成 orange（橙色）。",
        "给你的 <code>h1</code> 元素添加名为 <code>orange-text</code> 的 <code>id</code> 属性。记住，id 样式看起来是这样的：",
        "<code>&#60;h1 id=\"orange-text\"&#62;</code>",
        "在你的 <code>h1</code> 元素中保留 <code>blue-text</code> 和 <code>pink-text</code> 两个 class。",
        "在你的 <code>style</code> 元素中为你的 <code>orange-text</code> id 创建一个 CSS 声明，就像下面例子中的样子：",
        "<blockquote>#brown-text {<br>&nbsp;&nbsp;color: brown;<br>}</blockquote>",
        "注意：你声明的这个 CSS 在 pink-text class 的上面还是下面是无所谓的，因为 id 属性总是具有更高的优先级。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: black;",
        "    font-family: Monospace;",
        "    color: green;",
        "  }",
        "  .pink-text {",
        "    color: pink;",
        "  }",
        "  .blue-text {",
        "    color: blue;",
        "  }",
        "</style>",
        "<h1 class=\"pink-text blue-text\">Hello World!</h1>"
      ],
      "tests": [
        "assert($(\"h1\").hasClass(\"pink-text\"), 'message: 你的 <code>h1</code> 元素应该包含 <code>pink-text</code> class。');",
        "assert($(\"h1\").hasClass(\"blue-text\"), 'message: 你的 <code>h1</code> 元素应该包含 <code>blue-text</code> class。');",
        "assert($(\"h1\").attr(\"id\") === \"orange-text\", 'message: 为你的 <code>h1</code> 元素添加 <code>orange-text</code> id。');",
        "assert(code.match(/#orange-text\\s*{/gi), 'message: 为你的 <code>orange-text</code> id 创建一个 CSS 声明。');",
        "assert(!code.match(/<h1.*style.*>/gi), 'message: 不要为你的 <code>h1</code> 添加任何 <code>style</code> 属性。');",
        "assert($(\"h1\").css(\"color\") === \"rgb(255, 165, 0)\", 'message: 你的 <code>h1</code> 元素应该是橙色的。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf06756",
      "title": "Override Class Declarations with Inline Styles",
      "description": [
        "我们证明了无论在 <code>style</code> 元素 CSS 的哪个位置进行声明，id 声明都会覆盖 class 声明。",
        "还有其他覆盖 CSS 的方法。你还记得行内样式吗？",
        "试着用 <code>in-line style（行内样式）</code> 使 <code>h1</code> 元素变为白色。记住，行内样式看起来是这样的：",
        "<code>&#60;h1 style=\"color: green\"&#62;</code>",
        "保留 <code>h1</code> 元素中的 <code>blue-text</code> 和 <code>pink-text</code> 两个 class。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: black;",
        "    font-family: Monospace;",
        "    color: green;",
        "  }",
        "  #orange-text {",
        "    color: orange;",
        "  }",
        "  .pink-text {",
        "    color: pink;",
        "  }",
        "  .blue-text {",
        "    color: blue;",
        "  }",
        "</style>",
        "<h1 id=\"orange-text\" class=\"pink-text blue-text\">Hello World!</h1>"
      ],
      "tests": [
        "assert($(\"h1\").hasClass(\"pink-text\"), 'message: 你的 <code>h1</code> 元素应该包含 <code>pink-text</code> class。');",
        "assert($(\"h1\").hasClass(\"blue-text\"), 'message: 你的 <code>h1</code> 元素应该包含 <code>blue-text</code> class。');",
        "assert($(\"h1\").attr(\"id\") === \"orange-text\", 'message: 你的 <code>h1</code> 元素应该包含 <code>orange-text</code> id。');",
        "assert(code.match(/<h1[\\s\\S]*?style/gi) && code.match(/<h1[\\s\\S]*?style[\\s\\S]*?color\\s*?:/gi), 'message: 给你的 <code>h1</code> 元素添加行内样式 <code>color&#58; white</code>。');",
        "assert($(\"h1\").css(\"color\") === \"rgb(255, 255, 255)\", 'message: 你的 <code>h1</code> 元素应该是白色的。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf07756",
      "title": "Override All Other Styles by using Important",
      "description": [
        "耶！我们刚刚证明了行内样式将覆盖你的 <code>style</code> 元素中的所有 CSS 声明。",
        "但是等一下，还有最后一种覆盖 CSS 的方法，这是所有方法中最强大的，但是在讲它之前，我们先讲讲为什么你要覆盖 CSS。",
        "很多情况下，你会使用 CSS 库，这些库可能会意外覆盖掉你自己的 CSS。所有当你确实需要确保某元素具有指定的 CSS 时，你可以使用 <code>!important</code>。",
        "让我们再回到我们的 <code>pink-text</code> class 声明。还记得不？我们的 <code>pink-text</code> class 被随后的 class 声明、id 声明和行内样式所覆盖了。",
        "让我们来给 pink-text 元素的 color 声明加上关键字 <code>!important</code>，以便 100% 确保你的 <code>h1</code> 元素是粉色的。",
        "举例如下：",
        "<code>color: red !important;</code>"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: black;",
        "    font-family: Monospace;",
        "    color: green;",
        "  }",
        "  #orange-text {",
        "    color: orange;",
        "  }",
        "  .pink-text {",
        "    color: pink;",
        "  }",
        "  .blue-text {",
        "    color: blue;",
        "  }",
        "</style>",
        "<h1 id=\"orange-text\" class=\"pink-text blue-text\" style=\"color: white\">Hello World!</h1>"
      ],
      "tests": [
        "assert($(\"h1\").hasClass(\"pink-text\"), 'message: 你的 <code>h1</code> 元素应该包含 class <code>pink-text</code>。');",
        "assert($(\"h1\").hasClass(\"blue-text\"), 'message: 你的 <code>h1</code> 元素应该包含 class <code>blue-text</code>。');",
        "assert($(\"h1\").attr(\"id\") === \"orange-text\", 'message: 你的 <code>h1</code> 元素应该包含 id <code>orange-text</code>。');",
        "assert(code.match(/<h1.*style/gi) && code.match(/<h1.*style.*color\\s*?:/gi), 'message: 你的 <code>h1</code> 元素应该包含行内样式 <code>color&#58; white</code>。');",
        "assert(code.match(/pink.*\\!important;/gi), 'message: 你的 <code>pink-text</code> class 应该包含 <code>!important</code> 关键字以覆盖所有其它的声明。');",
        "assert($(\"h1\").css(\"color\") === \"rgb(255, 192, 203)\", 'message: 你的 <code>h1</code> 元素应该是粉色的。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08726",
      "title": "Use Hex Code for Specific Colors",
      "description": [
        "你是否知道在 CSS 中还有其他表示颜色的方法？其中的一种方法称作 hexadecimal code（十六进制编码），或简写为 <code>hex code</code>。",
        "我们通常使用 <code>decimals</code>，也就是十进制数字，它对每一位数字使用符号 0 到 9。<code>Hexadecimals</code> （或 <code>hex</code>）是十六进制数字，这意味着它使用十六个不同的符号。像十进制那样，符号 0-9 代表数值零到九，再使用 A、B、C、D、E、F 代表数值十到十五。合在一起，用 0 到 F 可以代表 <code>hexadecimal</code> 中的每一位数字，共为我们提供 16 个可能的数值。你可以在 <a target='_blank' href='https://en.wikipedia.org/wiki/Hexadecimal'>这儿</a> 找到更多关于十六进制数字的信息。",
        "在 CSS 中，我们可以使用 6 位十六进制数字来表示颜色，每 2 位分别表示红色 (R)、绿色 (G) 和蓝色 (B) 成分。例如，<code>#000000</code> 是黑色，同时也是可能的数值中最小的。你可以在 <a target='_blank' href='https://en.wikipedia.org/wiki/RGB_color_model'>这儿</a> 找到更多关于 RGB 颜色系统的信息。",
        "把 <code>body</code> 元素的 background-color 由 <code>black</code> 替换成其 <code>hex code</code> 表示，即<code>#000000</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: black;",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(0, 0, 0)\", 'message: 使你的 <code>body</code> 元素的背景为黑色。');",
        "assert(code.match(/body\\s*{(([\\s\\S]*;\\s*?)|\\s*?)background.*\\s*:\\s*?#000(000)?((\\s*})|(;[\\s\\S]*?}))/gi), 'message: 使用 <code>hex code</code> 来表示黑色而不是用单词 <code>black</code>，例如 <code>body { color&#58; #000000; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08725",
      "title": "Use Hex Code to Color Elements White",
      "description": [
        "<code>0</code> 是 hex code（十六进制编码）中最小的一个，它代表颜色的完全缺失。",
        "<code>F</code> 是 hex code（十六进制编码）中最大的一个，它代表最大可能的亮度。",
        "让我们通过把 background-color 的 hex code 修改为 <code>#FFFFFF</code>，以把 <code>body</code> 元素的背景改为白色。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: #000000;",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(255, 255, 255)\", 'message: 你的 <code>body</code> 元素的 <code>background-color</code> 应该是白色的。');",
        "assert(code.match(/body\\s*{(([\\s\\S]*;\\s*?)|\\s*?)background.*\\s*:\\s*?#FFF(FFF)?((\\s*})|(;[\\s\\S]*?}))/gi), 'message: 使用 <code>hex code</code> 表示白色而不是使用单词 <code>white</code>，例如 <code>body { color&#58; #FFFFFF; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08724",
      "title": "Use Hex Code to Color Elements Red",
      "description": [
        "你可能会疑惑为什么我们使用 6 位数表示一种颜色而不是只用一位或二位，答案是使用 6 位可提供给我们数量巨大的颜色变化。",
        "会有多少种可能的颜色？16 个值和 6 个位置意味着我们有 16 的 6 次方，或者说超过 1600 万种可能的颜色。",
        "Hex code 遵循 red-green-blue（红-绿-蓝），或者叫 <code>rgb</code> 格式。hex code 中的前两位表示颜色中红色的数量，第三四位代表绿色的数量，第五六位代表蓝色的数量。",
        "所以要得到绝对的纯红色，你只需要在第一和第二位使用 <code>F</code> （最大可能的数值），且在第三、第四、第五和第六位使用 <code>0</code> （最小可能数值）。",
        "通过对 background-color 应用 hex code 值 <code>#FF0000</code> 以把 <code>body</code> 元素的背景色设置为红色。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: #FFFFFF;",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(255, 0, 0)\", 'message: 把你的 <code>body</code> 元素的 <code>background-color</code> 设置为红色。');",
        "assert(code.match(/body\\s*{(([\\s\\S]*;\\s*?)|\\s*?)background.*\\s*:\\s*?#((F00)|(FF0000))((\\s*})|(;[\\s\\S]*?}))/gi), 'message: 使用 <code>hex code</code> 而不是单词 <code>red</code> 表示红色，例如 <code>body { color&#58; #FF0000; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08723",
      "title": "Use Hex Code to Color Elements Green",
      "description": [
        "记住 <code>hex code</code> 遵循 red-green-blue（红-绿-蓝），或称为 <code>rgb</code> 格式。hex code 中的前两位表示颜色中红色的数量，第三四位代表绿色的数量，第五六位代表蓝色的数量。",
        "所以要得到绝对的纯绿色，你只需要在第三和第四位使用 <code>F</code> （最大可能的数值），且在其它位使用 <code>0</code> （最小可能数值）。",
        "通过对 background-color 应用 hex code 值 <code>#00FF00</code> 以把 <code>body</code> 元素的背景色设置为绿色。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: #FF0000;",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(0, 255, 0)\", 'message: 把你的 <code>body</code> 元素的 <code>background-color</code> 设置为绿色。');",
        "assert(code.match(/body\\s*{(([\\s\\S]*;\\s*?)|\\s*?)background.*\\s*:\\s*?#((0F0)|(00FF00))((\\s*})|(;[\\s\\S]*?}))/gi), 'message: 使用 <code>hex code</code> 而不是单词 <code>green</code> 来表示绿色，例如 <code>body { color&#58; #00FF00; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08722",
      "title": "Use Hex Code to Color Elements Blue",
      "description": [
        "<code>hex code</code> 遵循 red-green-blue（红-绿-蓝），或称为 <code>rgb</code> 格式。hex code 中的前两位表示颜色中红色的数量，第三四位代表绿色的数量，第五六位代表蓝色的数量。",
        "所以要得到绝对的纯蓝色，你只需要在第五和第六位使用 <code>F</code> （最大可能的数值），且在其它位使用 <code>0</code> （最小可能数值）。",
        "通过对 background-color 应用 hex code 值 <code>#0000FF</code> 以把 <code>body</code> 元素的背景色设置为蓝色。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: #00FF00;",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(0, 0, 255)\", 'message: 把你的 <code>body</code> 元素的 <code>background-color</code> 设置为蓝色。');",
        "assert(code.match(/body\\s*{(([\\s\\S]*;\\s*?)|\\s*?)background.*\\s*:\\s*?#((00F)|(0000FF))((\\s*})|(;[\\s\\S]*?}))/gi), 'message: 使用 <code>hex code</code> 而不是单词 <code>blue</code> 来表示蓝色，例如 <code>body { color&#58; #0000FF; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08721",
      "title": "Use Hex Code to Mix Colors",
      "description": [
        "从这三种纯色（红、绿、蓝），我们能得到 1600 万种其它的颜色。",
        "例如，橙色是纯红，混合一些绿，没有蓝。",
        "通过对 background-color 应用 hex code 值 <code>#FFA500</code> 以把 <code>body</code> 元素的背景色设置为橙色。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: #0000FF;",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(255, 165, 0)\", 'message: 把你的 <code>body</code> 元素的 <code>background-color</code> 设置为橙色。');",
        "assert(code.match(/body\\s*{(([\\s\\S]*;\\s*?)|\\s*?)background.*\\s*:\\s*?#FFA500((\\s*})|(;[\\s\\S]*?}))/gi), 'message: 使用 <code>hex code</code> 而不是单词 <code>orange</code> 来表示橙色，例如 <code>body { color&#58; #FFA500; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aede08720",
      "title": "Use Hex Code to Color Elements Gray",
      "description": [
        "从这三种纯色（红、绿、蓝），我们能得到 1600 万种其它的颜色。",
        "我们也可以通过平均混合所有三种颜色得到不同灰度等级的灰色。",
        "通过对 background-color 应用 hex code 值 <code>#808080</code> 以把 <code>body</code> 元素的背景色设置为灰色。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: #FFA500;",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(128, 128, 128)\", 'message: 把你的 <code>body</code> 元素的 <code>background-color</code> 设置为灰色。');",
        "assert(code.match(/body\\s*{(([\\s\\S]*;\\s*?)|\\s*?)background.*\\s*:\\s*?#808080((\\s*})|(;[\\s\\S]*?}))/gi), 'message: 使用 <code>hex code</code> 而不是单词 <code>gray</code> 来表示灰色，例如 <code>body { color&#58; #808080; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08720",
      "title": "Use Hex Code for Specific Shades of Gray",
      "description": [
        "通过平均混合所有三种颜色，我们还可以得到其他灰度等级的灰色。我们可以非常接近纯黑色。",
        "通过对 background-color 应用 hex code 值 <code>#111111</code> 以把 <code>body</code> 元素的背景色设置为深灰色。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: #808080;",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(17, 17, 17)\", 'message: 把你的 <code>body</code> 元素的 <code>background-color</code> 设置为深灰色。');",
        "assert(code.match(/body\\s*{(([\\s\\S]*;\\s*?)|\\s*?)background.*\\s*:\\s*?#111(111)?((\\s*})|(;[\\s\\S]*?}))/gi), 'message: 使用 <code>hex code</code> 来表示深灰色，例如 <code>body { color&#58; #111111; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedf08719",
      "title": "Use Abbreviated Hex Code",
      "description": [
        "许多人对超过 1600 万种可能的颜色感觉十分地抓狂，并且 hex code 非常难以记忆。幸运的是，你可以缩短它。",
        "例如，红，hex code 是 <code>#FF0000</code> ，可被缩写成 <code>#F00</code>。也就是说，一位表示红，一位表示绿，一位表示蓝。",
        "这会把所有可能的颜色数减少至大约 4000 种，但是浏览器会把 <code>#FF0000</code> 和 <code>#F00</code> 解释为完全相同的颜色。",
        "继续前进，尝试使用 <code>#F00</code> 把 <code>body</code> 元素的背景色改为红色。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: #111111;",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(255, 0, 0)\", 'message: 把你的 <code>body</code> 元素的 <code>background-color</code> 设置为红色。');",
        "assert(code.match(/body\\s*{(([\\s\\S]*;\\s*?)|\\s*?)background.*\\s*:\\s*?#F00((\\s*})|(\\s*;[\\s\\S]*?}))/gi), 'message: 使用 <code>abbreviated（缩写的） hex code</code> 而不是六字符 <code>hex code</code>。例如 <code>body { color&#58; #F00; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aede08718",
      "title": "Use RGB values to Color Elements",
      "description": [
        "可以在 CSS 中表示颜色的另一个方法是使用 <code>rgb</code> 值。",
        "代表黑色的 RGB 值看起来是下面的样子：",
        "<code>rgb(0, 0, 0)</code>",
        "代表白色的 RGB 值看起来是下面的样子：",
        "<code>rgb(255, 255, 255)</code>",
        "使用 <code>rgb</code>，你通过 0 至 255 之间的一个数字来指定每种颜色的亮度，而不是像 hex code 那样使用六个十六进制数字。",
        "如果你做个算术，16 乘以 16 总共有 256 个值，所以从零开始计数的 <code>rgb</code>，和 hex code 一样有完全相同数量的可能数值。",
        "让我们用黑色的 RGB 值 <code>rgb(0, 0, 0)</code> 替换掉 <code>body</code> 元素背景色的 hex code。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: #F00;",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(0, 0, 0)\", 'message: 你的 <code>body</code> 元素应该具有黑色的背景。');",
        "assert(code.match(/rgb\\s*\\(\\s*0\\s*,\\s*0\\s*,\\s*0\\s*\\)/ig), 'message: 使用 <code>rgb</code> 将你的 <code>body</code> 元素的 <code>background-color</code> 设置为黑色，例如 <code>body { background-color&#58; rgb&#40;0&#44; 0&#44; 0&#41;; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad88fee1348bd9aedf08726",
      "title": "Use RGB to Color Elements White",
      "description": [
        "The RGB value for black looks like this:",
        "<code>rgb(0, 0, 0)</code>",
        "The RGB value for white looks like this:",
        "<code>rgb(255, 255, 255)</code>",
        "使用 <code>rgb</code>，你通过 0 至 255 之间的一个数字来指定每种颜色的亮度，而不是像 hex code 那样使用六个十六进制数字。",
        "把 <code>body</code> 元素的背景色从黑色的 RGB 值修改为白色的 <code>rgb</code> 值 <code>rgb(255, 255, 255)</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: rgb(0, 0, 0);",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(255, 255, 255)\", 'message: 你的 <code>body</code> 元素应该具有白色的背景。');",
        "assert(code.match(/rgb\\s*\\(\\s*255\\s*,\\s*255\\s*,\\s*255\\s*\\)/ig), 'message: 使用 <code>rgb</code> 将你的 <code>body</code> 元素的 <code>background-color</code> 设置为白色，例如 <code>body { background-color&#58; rgb&#40;255&#44; 255 &#44; 255&#41;; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad89fee1348bd9aedf08724",
      "title": "Use RGB to Color Elements Red",
      "description": [
        "就像使用 hex code 一样，你可以通过不同数值的组合来表示 RGB 中不同的颜色。",
        "这些数值遵循 RGB 构成模式：第一位表示红色，第二位表示绿色，第三位表示蓝色。",
        "把 <code>body</code> 元素的背景色修改为红色的 RGB 值：<code>rgb(255, 0, 0)</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: rgb(255, 255, 255);",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(255, 0, 0)\", 'message: 你的 <code>body</code> 元素应该具有红色的背景。');",
        "assert(code.match(/rgb\\s*\\(\\s*255\\s*,\\s*0\\s*,\\s*0\\s*\\)/ig), 'message: 使用 <code>rgb</code> 将你的 <code>body</code> 元素的 <code>background-color</code> 设置为红色，例如 <code>body { background-color&#58; rgb&#40;255&#44; 0&#44; 0&#41;; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad80fee1348bd9aedf08723",
      "title": "Use RGB to Color Elements Green",
      "description": [
        "现在将你的 <code>body</code> 元素的背景色修改为绿色的 <code>rgb</code> 值：<code>rgb(0, 255, 0)</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: rgb(255, 0, 0);",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(0, 255, 0)\", 'message: 你的 <code>body</code> 元素应该具有绿色的背景。');",
        "assert(code.match(/rgb\\s*\\(\\s*0\\s*,\\s*255\\s*,\\s*0\\s*\\)/ig), 'message: 使用 <code>rgb</code> 将你的 <code>body</code> 元素的 <code>background-color</code> 设置为绿色，例如 <code>body { background-color&#58; rgb&#40;0&#44; 255&#44; 0&#41;; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad81fee1348bd9aedf08722",
      "title": "Use RGB to Color Elements Blue",
      "description": [
        "将你的 <code>body</code> 元素的背景色修改为蓝色的 RGB 值：<code>rgb(0, 0, 255)</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: rgb(0, 255, 0);",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(0, 0, 255)\", 'message: 你的 <code>body</code> 元素应该具有蓝色的背景。');",
        "assert(code.match(/rgb\\s*\\(\\s*0\\s*,\\s*0\\s*,\\s*255\\s*\\)/ig), 'message: 使用 <code>rgb</code> 将你的 <code>body</code> 元素的 <code>background-color</code> 设置为蓝色，例如 <code>body { background-color&#58; rgb&#40;0&#44; 0&#44; 255&#41;; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad82fee1348bd9aedf08721",
      "title": "Use RGB to Mix Colors",
      "description": [
        "就像使用 hex code 一样，你可以使用不同数值的组合在 RGB 中混合出各种颜色。",
        "将 <code>body</code> 元素的背景色修改为橙色的 RGB 值：<code>rgb(255, 165, 0)</code>。"
      ],
      "challengeSeed": [
        "<style>",
        "  body {",
        "    background-color: rgb(0, 0, 255);",
        "  }",
        "</style>"
      ],
      "tests": [
        "assert($(\"body\").css(\"background-color\") === \"rgb(255, 165, 0)\", 'message: 你的 <code>body</code> 元素应该具有橙色的背景。');",
        "assert(code.match(/rgb\\s*\\(\\s*255\\s*,\\s*165\\s*,\\s*0\\s*\\)/ig), 'message: 使用 <code>rgb</code> 将你的 <code>body</code> 元素的 <code>background-color</code> 设置为橙色，例如 <code>body { background-color&#58; rgb&#40;255&#44; 165&#44; 0&#41;; }</code>。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    }
  ]
}
